import { VehicleData } from '@tesla-dashboard/tesla-types'
import { VehicleState } from '@tesla-dashboard/types'

export const flattenVehicleData = (
  vehicleData: VehicleData
): Partial<VehicleState> => {
  const {
    charge_state,
    climate_state,
    drive_state,
    vehicle_state,
    gui_settings,
    vehicle_config
  } = vehicleData
  return {
    id: vehicleData.id,
    id_s: vehicleData.id_s,
    user_id: vehicleData.user_id,
    vehicle_id: vehicleData.vehicle_id,
    vin: vehicleData.vin,
    display_name: vehicleData.display_name,
    option_codes: vehicleData.option_codes,
    color: vehicleData.color,
    //  tokens: vehicleData.tokens,
    state: vehicleData.state,
    in_service: vehicleData.in_service,
    calendar_enabled: vehicleData.calendar_enabled,
    api_version: vehicleData.api_version,
    backseat_token: vehicleData.backseat_token,
    backseat_token_updated_at: vehicleData.backseat_token_updated_at,
    timestamp: vehicleData.vehicle_state.timestamp,

    // charge_state: {
    battery_heater_on: charge_state.battery_heater_on,
    battery_level: charge_state.battery_level,
    battery_range: charge_state.battery_range,
    charge_current_request: charge_state.charge_current_request,
    charge_current_request_max: charge_state.charge_current_request_max,
    charge_enable_request: charge_state.charge_enable_request,
    charge_energy_added: charge_state.charge_energy_added,
    charge_limit_soc: charge_state.charge_limit_soc,
    charge_limit_soc_max: charge_state.charge_limit_soc_max,
    charge_limit_soc_min: charge_state.charge_limit_soc_min,
    charge_limit_soc_std: charge_state.charge_limit_soc_std,
    charge_miles_added_ideal: charge_state.charge_miles_added_ideal,
    charge_miles_added_rated: charge_state.charge_miles_added_rated,
    charge_port_cold_weather_mode: charge_state.charge_port_cold_weather_mode,
    charge_port_door_open: charge_state.charge_port_door_open,
    charge_port_latch: charge_state.charge_port_latch,
    charge_rate: charge_state.charge_rate,
    charge_to_max_range: charge_state.charge_to_max_range,
    charger_actual_current: charge_state.charger_actual_current,
    charger_phases: charge_state.charger_phases,
    charger_pilot_current: charge_state.charger_pilot_current,
    charger_power: charge_state.charger_power,
    charger_voltage: charge_state.charger_voltage,
    charging_state: charge_state.charging_state,
    conn_charge_cable: charge_state.conn_charge_cable,
    est_battery_range: charge_state.est_battery_range,
    fast_charger_brand: charge_state.fast_charger_brand,
    fast_charger_present: charge_state.fast_charger_present,
    fast_charger_type: charge_state.fast_charger_type,
    ideal_battery_range: charge_state.ideal_battery_range,
    managed_charging_active: charge_state.managed_charging_active,
    managed_charging_start_time: charge_state.managed_charging_start_time,
    managed_charging_user_canceled: charge_state.managed_charging_user_canceled,
    max_range_charge_counter: charge_state.max_range_charge_counter,
    minutes_to_full_charge: charge_state.minutes_to_full_charge,
    not_enough_power_to_heat: charge_state.not_enough_power_to_heat,
    scheduled_charging_pending: charge_state.scheduled_charging_pending,
    scheduled_charging_start_time: charge_state.scheduled_charging_start_time,
    time_to_full_charge: charge_state.time_to_full_charge,
    trip_charging: charge_state.trip_charging,
    usable_battery_level: charge_state.usable_battery_level,
    user_charge_enable_request: charge_state.user_charge_enable_request,

    // climate_state: {
    battery_heater: climate_state.battery_heater,
    battery_heater_no_power: climate_state.battery_heater_no_power,
    climate_keeper_mode: climate_state.climate_keeper_mode,
    defrost_mode: climate_state.defrost_mode,
    driver_temp_setting: climate_state.driver_temp_setting,
    fan_status: climate_state.fan_status,
    inside_temp: climate_state.inside_temp,
    is_auto_conditioning_on: climate_state.is_auto_conditioning_on,
    is_climate_on: climate_state.is_climate_on,
    is_front_defroster_on: climate_state.is_front_defroster_on,
    is_preconditioning: climate_state.is_preconditioning,
    is_rear_defroster_on: climate_state.is_rear_defroster_on,
    left_temp_direction: climate_state.left_temp_direction,
    max_avail_temp: climate_state.max_avail_temp,
    min_avail_temp: climate_state.min_avail_temp,
    outside_temp: climate_state.outside_temp,
    passenger_temp_setting: climate_state.passenger_temp_setting,
    remote_heater_control_enabled: climate_state.remote_heater_control_enabled,
    right_temp_direction: climate_state.right_temp_direction,
    seat_heater_left: climate_state.seat_heater_left,
    seat_heater_rear_center: climate_state.seat_heater_rear_center,
    seat_heater_rear_left: climate_state.seat_heater_rear_left,
    seat_heater_rear_right: climate_state.seat_heater_rear_right,
    seat_heater_right: climate_state.seat_heater_right,
    side_mirror_heaters: climate_state.side_mirror_heaters,
    smart_preconditioning: climate_state.smart_preconditioning,
    wiper_blade_heater: climate_state.wiper_blade_heater,

    // drive_state: {
    gps_as_of: drive_state.gps_as_of,
    heading: drive_state.heading,
    latitude: drive_state.latitude,
    longitude: drive_state.longitude,
    native_latitude: drive_state.native_latitude,
    native_location_supported: drive_state.native_location_supported,
    native_longitude: drive_state.native_longitude,
    native_type: drive_state.native_type,
    power: drive_state.power,
    shift_state: drive_state.shift_state,
    speed: drive_state.speed,

    // gui_settings: {
    gui_24_hour_time: gui_settings.gui_24_hour_time,
    gui_charge_rate_units: gui_settings.gui_charge_rate_units,
    gui_distance_units: gui_settings.gui_distance_units,
    gui_range_display: gui_settings.gui_range_display,
    gui_temperature_units: gui_settings.gui_temperature_units,
    show_range_units: gui_settings.show_range_units,

    // vehicle_config: {
    can_accept_navigation_requests:
    vehicle_config.can_accept_navigation_requests,
    can_actuate_trunks: vehicle_config.can_actuate_trunks,
    car_special_type: vehicle_config.car_special_type,
    car_type: vehicle_config.car_type,
    charge_port_type: vehicle_config.charge_port_type,
    eu_vehicle: vehicle_config.eu_vehicle,
    exterior_color: vehicle_config.exterior_color,
    has_air_suspension: vehicle_config.has_air_suspension,
    has_ludicrous_mode: vehicle_config.has_ludicrous_mode,
    key_version: vehicle_config.key_version,
    motorized_charge_port: vehicle_config.motorized_charge_port,
    plg: vehicle_config.plg,
    rear_seat_heaters: vehicle_config.rear_seat_heaters,
    rear_seat_type: vehicle_config.rear_seat_type,
    rhd: vehicle_config.rhd,
    roof_color: vehicle_config.roof_color,
    seat_type: vehicle_config.seat_type,
    spoiler_type: vehicle_config.spoiler_type,
    sun_roof_installed: vehicle_config.sun_roof_installed,
    third_row_seats: vehicle_config.third_row_seats,
    use_range_badging: vehicle_config.use_range_badging,
    wheel_type: vehicle_config.wheel_type,

    // vehicle_state: {
    autopark_state_v3: vehicle_state.autopark_state_v3,
    autopark_style: vehicle_state.autopark_style,
    calendar_supported: vehicle_state.calendar_supported,
    car_version: vehicle_state.car_version,
    center_display_state: vehicle_state.center_display_state,
    fd_window: vehicle_state.fd_window,
    fp_window: vehicle_state.fp_window,
    rd_window: vehicle_state.rd_window,
    rp_window: vehicle_state.rp_window,
    smart_summon_available: vehicle_state.smart_summon_available,
    summon_standby_mode_enabled: vehicle_state.summon_standby_mode_enabled,
    df: vehicle_state.df,
    dr: vehicle_state.dr,
    ft: vehicle_state.ft,
    homelink_nearby: vehicle_state.homelink_nearby,
    is_user_present: vehicle_state.is_user_present,
    last_autopark_error: vehicle_state.last_autopark_error,
    locked: vehicle_state.locked,

    // nested in vehicle_state -> media_state?: {
    remote_control_enabled: vehicle_state.media_state.remote_control_enabled,

    notifications_supported: vehicle_state.notifications_supported,
    odometer: vehicle_state.odometer,
    parsed_calendar_supported: vehicle_state.parsed_calendar_supported,
    pf: vehicle_state.pf,
    pr: vehicle_state.pr,
    remote_start: vehicle_state.remote_start,
    remote_start_enabled: vehicle_state.remote_start_enabled,
    remote_start_supported: vehicle_state.remote_start_supported,
    rt: vehicle_state.rt,
    sentry_mode: vehicle_state.sentry_mode,
    sentry_mode_available: vehicle_state.sentry_mode_available,

    // nested in vehicle_state -> software_update?: {
    download_perc: vehicle_state.software_update.download_perc,
    install_perc: vehicle_state.software_update.install_perc,
    expected_duration_sec: vehicle_state.software_update.expected_duration_sec,
    status: vehicle_state.software_update.status,
    version: vehicle_state.software_update.version,

    // nested in vehicle_state -> speed_limit_mode?: {
    active: vehicle_state.speed_limit_mode.active,
    current_limit_mph: vehicle_state.speed_limit_mode.current_limit_mph,
    max_limit_mph: vehicle_state.speed_limit_mode.max_limit_mph,
    min_limit_mph: vehicle_state.speed_limit_mode.min_limit_mph,
    pin_code_set: vehicle_state.speed_limit_mode.pin_code_set,

    sun_roof_percent_open: vehicle_state.sun_roof_percent_open,
    sun_roof_state: vehicle_state.sun_roof_state,
    valet_mode: vehicle_state.valet_mode,
    valet_pin_needed: vehicle_state.valet_pin_needed,
    vehicle_name: vehicle_state.vehicle_name
  }
}
